@model List<Lesula.Client.Contracts.Models.Dependency>
<div id="previewTable" class="t-widget t-grid" style="width: 850px; margin-top: 5px">
    Add new dependency:
    <table>
        <thead class="t-grid-header">
            <tr>
                <th>Job
                </th>
                <th style="width: 290px;">Actions
                </th>
            </tr>
        </thead>
        <tbody>
            <tr id="Preview">
                <td>@Html.DropDownList("pid", (SelectList)ViewBag.JobList)</td>
                <td>
                    <button type="button" class="new" onclick="addItem()">
                        Add</button>
                </td>
            </tr>
        </tbody>
    </table>
</div>


<div class="t-widget t-grid" id="itemsTable" style="display: none; width: 850px; margin-top: 5px;">
    Dependencies:
    <table>
        <thead class="t-grid-header">
            <tr>
                <th>Id
                </th>
                <th>Name
                </th>
                <th style="width: 290px;">Actions
                </th>
            </tr>
        </thead>
        <tbody id="itemsBody">
            @if (Model != null && Model.Count > 0)
            {
                foreach (var itemInfo in Model)
                {
                    <tr>
                        <td class="iid">
                            @itemInfo.Id
                        </td>
                        <td>
                            @itemInfo.Name
                        </td>
                        <td>
                            <button class="delete" type="button" onclick="removeItem($(this))">
                                Remove
                            </button>
                        </td>
                    </tr>
                }
                <script type="text/javascript">
                    $("#itemsTable").show();
                </script>
            }
        </tbody>
    </table>
</div>
<span id="queryFilterItems">
    
</span>

<script type="text/javascript">
    function addItem(id, name) {
        if (!id) {
            id = $("#pid").val();
            name = $("#pid").children("option").is("selected").text();
        }

        // $("#previewTable").hide();
        $("#itemsTable").show();

        var newRow = $("<tr><td class=\"iid\" name=\"id\">" + id
            + "</td><td name=\"name\">" + name + "</td><td><button class=\"delete\" type=\"button\" onclick=\"removeItem($(this))\">"
            + "Remove</button></td></tr>");

        $("#itemsBody").append(newRow);

        $("#pid").val('');
        adjustTableStyle();
    }

    function removeItem(item) {
        $(item).parents("tr:first").remove();
        adjustTableStyle();
    }

    function adjustTableStyle() {
        var hidden = $('#queryFilterItems');
        hidden.empty();
        var items = $("#itemsBody tr");
        for (var i = 0; i < items.length; i++) {

            var qid = $('[name=id]', items[i]).text();
            var qname = $('[name=name]', items[i]).text();
            hidden.append("<input name=\"Dependency[" + i + "].Id\" type=\"hidden\" value=\"" + qid + "\"/>");
            hidden.append("<input name=\"Dependency[" + i + "].Name\" type=\"hidden\" value=\"" + qname + "\"/>");
            var item = $(items[i]);
            if (i % 2 == 0) {
                item.removeClass("t-alt");
            }
            else {
                item.addClass("t-alt");
            }
        }

        //$('.delete').button({ icons: { primary: "us-close" } });
        //$('.up').button({ icons: { primary: "us-up" } });
        //$('.down').button({ icons: { primary: "us-down" } });
    }
</script>


